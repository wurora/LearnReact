{"version":3,"sources":["redux/constant.js","redux/actions/count.js","containers/Count/index.jsx","containers/Person/index.jsx","redux/actions/person.js","App.jsx","redux/reducers/person.js","redux/reducers/index.js","redux/reducers/count.js","redux/store.js","index.js"],"names":["INCREMENT","DECREMENT","ADD_PERSON","increment","data","type","Count","state","value","selectNumber","props","decrement","incrementIfOdd","parseInt","count","incrementAsync","this","ref","c","onClick","persons","length","map","person","name","age","id","Component","connect","time","dispatch","setTimeout","Person","addClick","nameNode","ageNode","trim","addPerson","nanoid","placeholder","App","initState","combineReducers","preState","action","prevState","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","querySelector"],"mappings":"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","file":"static/js/main.67f95aa4.chunk.js","sourcesContent":["/* \r\n  用于定义action对象中type类型的常量值\r\n*/\r\n\r\nexport const INCREMENT = 'increment'\r\nexport const DECREMENT = 'decrement'\r\nexport const ADD_PERSON = 'add_person'","/* \r\n  该文件专门为Count组件生成action对象\r\n  目的：便于管理的同时，防止拼写错误\r\n*/\r\nimport { INCREMENT, DECREMENT } from \"../constant\"\r\n\r\n// 同步action，就是指action的值为Object类型的一半对象\r\nexport const increment = data => ({ type: INCREMENT, data })\r\nexport const decrement = data => ({ type: DECREMENT, data })\r\n\r\n// 异步action，就是指action的值为函数，\r\n// 异步action中一般会调用同步action\r\n// 异步action不是必须要用的\r\nexport const incrementAsync = (data, time) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(increment(data))\r\n    }, time);\r\n  }\r\n}","import React, { Component } from 'react'\r\n// 引入connect用于连接UI组件和redux\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  increment,\r\n  decrement,\r\n  incrementAsync\r\n} from '../../redux/actions/count'\r\n\r\n\r\nclass Count extends Component {\r\n\r\n  state = {\r\n\r\n  }\r\n\r\n  increment = () => {\r\n    const { value } = this.selectNumber\r\n    this.props.increment(value * 1)\r\n  }\r\n  decrement = () => {\r\n    const { value } = this.selectNumber\r\n    this.props.decrement(value * 1)\r\n  }\r\n  incrementIfOdd = () => {\r\n    const { value } = this.selectNumber\r\n    const newValue = parseInt(value) + parseInt(this.props.count)\r\n    if (newValue % 2 === 1)\r\n      this.props.increment(value * 1)\r\n  }\r\n  incrementAsync = () => {\r\n    const { value } = this.selectNumber\r\n    this.props.incrementAsync(parseInt(value), 500)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>当前求和为：{this.props.count}</h1>\r\n        <select ref={c => this.selectNumber = c}>\r\n          <option value=\"1\">1</option>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"3\">3</option>\r\n        </select>\r\n        <button onClick={this.increment}>+</button>&nbsp;\r\n        <button onClick={this.decrement}>-</button>&nbsp;\r\n        <button onClick={this.incrementIfOdd}>当前求和为奇数再加</button>&nbsp;\r\n        <button onClick={this.incrementAsync}>异步加</button>&nbsp;\r\n\r\n        <p>总人数: {this.props.persons.length}</p>\r\n        <ul>\r\n          {\r\n            this.props.persons.map(person => (\r\n              <li key={person.id}>\r\n                <p>name: {person.name}</p>\r\n                <p>age: {person.age}</p>\r\n              </li>\r\n            ))\r\n          }\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    count: state.count,\r\n    persons: state.persons\r\n  }),\r\n  {\r\n    increment,\r\n    decrement,\r\n    incrementAsync,\r\n  }\r\n)(Count)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { nanoid } from 'nanoid'\r\nimport { addPerson } from '../../redux/actions/person'\r\n\r\nclass Person extends Component {\r\n\r\n  addClick = () => {\r\n    const name = this.nameNode.value\r\n    const age = this.ageNode.value\r\n    if (name.trim() === '' || parseInt(age) <= 0) return\r\n    this.props.addPerson({ id: nanoid(), name, age })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input ref={c => this.nameNode = c} type=\"text\" placeholder=\"输入名字\" />&nbsp;\r\n        <input ref={c => this.ageNode = c} type=\"text\" placeholder=\"输入年龄\" />&nbsp;\r\n        <button onClick={this.addClick}>添加</button>\r\n        <h2>Count: {this.props.count}</h2><br />\r\n\r\n        <ul>\r\n          {\r\n            this.props.persons.map(person => (\r\n              <li key={person.id}>\r\n                <p>id: {person.id}</p>\r\n                <p>name: {person.name}</p>\r\n                <p>age: {person.age}</p>\r\n              </li>\r\n            ))\r\n          }\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    persons: state.persons,\r\n    count: state.count\r\n  }),\r\n  {\r\n    addPerson\r\n  }\r\n)(Person)","import { ADD_PERSON } from \"../constant\";\r\n\r\nexport const addPerson = person => ({ type: ADD_PERSON, data: person })","import React, { Component } from 'react'\r\n\r\n// 引入容器组件\r\nimport Count from './containers/Count'\r\nimport Person from './containers/Person'\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Count />\r\n        <br />\r\n        <hr />\r\n        <br />\r\n        <Person />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { ADD_PERSON } from \"../constant\";\r\n\r\nconst initState = [{ id: '001', name: 'tom', age: 18 }]\r\nexport default function personReducer(prevState = initState, action) {\r\n  const { type, data } = action\r\n  switch (type) {\r\n    case ADD_PERSON:\r\n      return [data, ...prevState]\r\n    default:\r\n      break;\r\n  }\r\n  return prevState\r\n}","import { combineReducers } from 'redux'\r\n\r\nimport count from './count'\r\nimport persons from './person'\r\n\r\n// 汇总所有的reducer\r\nexport default combineReducers({\r\n  count,\r\n  persons,\r\n})\r\n","/* \r\n  1.该文件用于创建一个为Count组件服务的reducer，\r\n    reducer的本质就是一个函数\r\n  2.reducer函数会接到两个参数，\r\n    分别是：\r\n      1.之前的状态(preState)\r\n      2.动作对象(action)\r\n*/\r\nimport { INCREMENT, DECREMENT } from \"../constant\"\r\n\r\nconst initState = 0\r\nexport default function countReducer(preState = initState, action) {\r\n  // 从action中获取type，data\r\n  const { type, data } = action\r\n  // 根据type决定如何加工数据\r\n  switch (type) {\r\n    case INCREMENT:\r\n      return preState + data;\r\n    case DECREMENT:\r\n      return preState - data;\r\n    default: break;\r\n  }\r\n  return preState;\r\n}","/* \r\n  该文件专门用于暴露一个store对象，整个应用只有一个store对象\r\n*/\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { createStore, applyMiddleware } from 'redux'\r\n\r\n// 引入汇总之后的reducer\r\nimport reducer from './reducers'\r\n\r\n// 引入redux-thunk，用于支持异步action\r\nimport thunk from 'redux-thunk'\r\n\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\n","// 引入React核心库\r\nimport React from 'react'\r\n// 引入ReactDOM\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\nimport store from './redux/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  (\r\n    <React.StrictMode>\r\n      {/* 用provider包裹App的目的是让App所有的后代容器组件都能收到store */}\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </React.StrictMode>\r\n  ), document.querySelector('#root')\r\n)"],"sourceRoot":""}